name: CI – Build & Push

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write          # omogućuje GITHUB_TOKEN-u push u GHCR

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io/pteromyini123
    steps:
      # ───── 0. Checkout ─────────────────────────────────────────────
      - name: Checkout code
        uses: actions/checkout@v4

      # ───── 1. Učitaj ver. iz VERSION ──────────────────────────────
      - name: Read VERSION
        id: read-version
        run: echo "TAG=$(cat VERSION)" >> $GITHUB_OUTPUT

      # ───── 2. Dummy tests (placeholder) ───────────────────────────
      - name: Dummy tests
        run: |
          echo "🔎 Placeholder tests passed"
          # ovdje bi išao 'pytest -q' kad dodaš prave testove

      # ───── 3. Login + Buildx set-up ───────────────────────────────
      - name: Log-in to GHCR (via built-in token)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set-up Buildx
        uses: docker/setup-buildx-action@v3

      # ───── 4. SERVICE 1  build & push ─────────────────────────────
      - name: Build & push service1
        uses: docker/build-push-action@v5
        with:
          context: ./CI_CD/service1
          push: true
          visibility: public
          tags: |
            ${{ env.REGISTRY }}/service1:${{ steps.read-version.outputs.TAG }}
            ${{ env.REGISTRY }}/service1:latest

      # ───── 5. SERVICE 2  build & push ─────────────────────────────
      - name: Build & push service2
        uses: docker/build-push-action@v5
        with:
          context: ./CI_CD/service2
          push: true
          visibility: public
          tags: |
            ${{ env.REGISTRY }}/service2:${{ steps.read-version.outputs.TAG }}
            ${{ env.REGISTRY }}/service2:latest
